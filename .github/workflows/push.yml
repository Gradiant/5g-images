---
name: Push Images

on:
  push:
    branches:
      - main
    paths:
      - 'images/**'
      - '!images/**/update_current_tag.sh'

env:
  images_dir: images

jobs:
  # Generate the values for images with changes
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: files
        uses: tj-actions/changed-files@v17.3
      - name: Generate Matrix Content
        id: generate-matrix
        run: |
          changed=`echo "${{ steps.files.outputs.all_changed_files }}" | sed 's/ /\n/g' | grep $images_dir | cut -f2 -d'/' | uniq | sed 's/^/"/;s/$/"/' | sed -z 's/\n/,/g;s/,$/\n/'`
          echo "::set-output name=matrix::{ \"image\": [ ${changed} ] }"
          
  # build image if changes in code
  build-image:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson( needs.generate-matrix.outputs.matrix ) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Image Info
        id: image-info
        run: |
          source ./images/${{ matrix.image }}/image_info.sh
          echo "::set-output name=platforms::$PLATFORMS"
          echo "::set-output name=image_tag::$IMAGE_TAG"
          echo "::set-output name=image::${{ matrix.image }}"
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./images/${{ steps.image-info.outputs.image }}/
          push: true
          tags: openverso/${{ steps.image-info.outputs.image }}:${{ steps.image-info.outputs.image_tag }}
          build-args: version=${{ steps.image-info.outputs.image_tag }}
          platforms: ${{ steps.image-info.outputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
