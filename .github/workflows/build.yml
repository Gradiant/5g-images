name: build images

on: 
  pull_request:
    branches:
      - main
    paths:
      - 'images/**'
      - '!images/**/update_current_tag.sh'

env:
  images_dir: images

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: files
        uses: tj-actions/changed-files@v17.3
      - name: Get changed images
        id: list-changed
        run: |
          changed=`echo "${{ steps.files.outputs.all_changed_files }}" | sed 's/ /\n/g' | grep $images_dir | cut -f1-2 -d'/' | uniq`
          echo "Changed files are:"
          echo "$changed"
          echo "::set-output name=list_changed::$changed"
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: steps.list-changed.outputs.changed == 'true'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        if: steps.list-changed.outputs.changed == 'true'

      - name: building images
        id: build
        run: |
            for image in $list_changed; do
              echo "build image $image"
              pushd $image
              source image_info.sh
              IMAGE_NAME=${image#"images/"}
              if [ -z "$PLATFORMS" ]; then
                docker build -t $IMAGE_NAME:$IMAGE_TAG --build-arg version=$IMAGE_TAG .
              else
                docker buildx build -t $IMAGE_NAME:$IMAGE_TAG --build-arg version=$IMAGE_TAG --platform ${PLATFORMS} .
              fi
              popd
            done
        env:
          list_changed: ${{steps.list-changed.outputs.list_changed}}
        if: steps.list-changed.outputs.changed == 'true'
