db_uri: mongodb://localhost/open5gs

#
#  o Set OGS_LOG_INFO to all domain level
#   - If `level` is omitted, the default level is OGS_LOG_INFO)
#   - If `domain` is omitted, the all domain level is set from 'level'
#    (Default values are used, so no configuration is required)
#
#  o Set OGS_LOG_ERROR to all domain level
#   - `level` can be set with none, fatal, error, warn, info, debug, trace
#  logger:
#    level: error
#
#  o Set OGS_LOG_DEBUG to mme/emm domain level
#  logger:
#    level: debug
#    domain: mme,emm
#
#  o Set OGS_LOG_TRACE to all domain level
#  logger:
#    level: trace
#    domain: core,sbi,ausf,event,tlv,mem,sock
#
logger:
    file: @localstatedir@/log/open5gs/scp.log

#
#  o TLS enable/disable
#  sbi:
#    server|client:
#      no_tls: false|true
#    - false: (Default) Use TLS
#    - true:  TLS disabled
#
#  o Verification enable/disable
#  sbi:
#    server|client:
#      no_verify: false|true
#    - false: (Default) Verify the PEER
#    - true:  Skip the verification step
#
#  o Server-side does not use TLS
#  sbi:
#    server:
#      no_tls: true
#
#  o Client-side skips the verification step
#  sbi:
#    client:
#      no_verify: true
#      key: /etc/open5gs/tls/amf.key
#      cert: /etc/open5gs/tls/amf.crt
#
#  o Use the specified certificate while verifying the client
#  sbi:
#    server
#      cacert: /etc/open5gs/tls/ca.crt
#
#  o Use the specified certificate while verifying the server
#  sbi:
#    client
#      cacert: /etc/open5gs/tls/ca.crt
#
sbi:
    server:
      no_tls: true
      cacert: @sysconfdir@/open5gs/tls/ca.crt
      key: @sysconfdir@/open5gs/tls/scp.key
      cert: @sysconfdir@/open5gs/tls/scp.crt
    client:
      no_tls: true
      cacert: @sysconfdir@/open5gs/tls/ca.crt
      key: @sysconfdir@/open5gs/tls/scp.key
      cert: @sysconfdir@/open5gs/tls/scp.crt

#
#  <SBI Server>
#
#  o SBI Server(http://<all address available>:80)
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#
#  o SBI Server(http://<any address>:7777)
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - addr:
#          - 0.0.0.0
#          - ::0
#        port: 7777
#
#  o SBI Server(https://<all address available>:443)
#  sbi:
#    server:
#      key: /etc/open5gs/tls/scp.key
#      cert: /etc/open5gs/tls/scp.crt
#  scp:
#    sbi:
#
#  o SBI Server(https://127.0.1.10:443, https://[::1]:443) without verification
#  sbi:
#    server:
#      no_verify: true
#      key: /etc/open5gs/tls/scp.key
#      cert: /etc/open5gs/tls/scp.crt
#  scp:
#    sbi:
#      - addr: 127.0.1.10
#      - addr: ::1
#
#  o SBI Server(https://scp.open5gs.org:443)
#    Use the specified certificate while verifying the client
#
#  sbi:
#    server:
#      cacert: /etc/open5gs/tls/ca.crt
#      key: /etc/open5gs/tls/scp.key
#      cert: /etc/open5gs/tls/scp.crt
#  scp:
#    sbi:
#      - name: scp.open5gs.org
#
#  o SBI Server(http://127.0.1.10:7777)
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - addr: 127.0.1.10
#        port: 7777
#
#  o SBI Server(http://<eth0 IP address>:80)
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - dev: eth0
#
#  o Provide custom SBI address to be advertised to NRF
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - dev: eth0
#        advertise: open5gs-scp.svc.local
#
#  o Another example of advertising on NRF
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - addr: localhost
#        advertise:
#          - 127.0.0.99
#          - ::1
#
#  o SBI Option (Default)
#    - tcp_nodelay : true
#    - so_linger.l_onoff : false
#
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      addr: 127.0.1.10
#      option:
#        tcp_nodelay: false
#        so_linger:
#          l_onoff: true
#          l_linger: 10
#
#  <For Indirect Communication with Delegated Discovery>
#
#  o (Default) If you do not set Delegated Discovery as shown below,
#
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - addr: 127.0.1.10
#        port: 7777
#
#    - Use SCP if SCP avaiable. Otherwise NRF is used.
#      => App fails if both NRF and SCP are unavailable.
#
#  sbi:
#    server:
#      no_tls: true
#  scp:
#    sbi:
#      - addr: 127.0.1.10
#        port: 7777
#    discovery:
#      delegated: auto
#
#  o To use SCP always => App fails if no SCP available.
#      delegated: yes
#
#  o Don't use SCP server => App fails if no NRF available.
#      delegated: no
#
scp:
    sbi:
      - addr: 127.0.1.10
        port: 7777

#  <Next hop SCP>
#
#  o SBI Client(http://127.0.1.10:7777)
#  sbi:
#    client:
#      no_tls: true
#  next_scp:
#    sbi:
#      addr: 127.0.1.10
#      port: 7777
#
#  o SBI Client(https://127.0.1.10:443, https://[::1]:443) without verification
#  sbi:
#    client:
#      no_verify: true
#      key: /etc/open5gs/tls/amf.key
#      cert: /etc/open5gs/tls/amf.crt
#  next_scp:
#    sbi:
#      - addr: 127.0.1.10
#      - addr: ::1
#
#  o SBI Client(https://scp.open5gs.org:443)
#    Use the specified certificate while verifying the server
#
#  sbi:
#    client:
#      cacert: /etc/open5gs/tls/ca.crt
#      key: /etc/open5gs/tls/amf.key
#      cert: /etc/open5gs/tls/amf.crt
#  next_scp:
#    sbi:
#      - name: scp.open5gs.org
#
#  o SBI Client(http://[fd69:f21d:873c:fb::1]:80)
#    If prefer_ipv4 is true, http://127.0.1.10:80 is selected.
#
#  sbi:
#    client:
#      no_tls: true
#  next_scp:
#    sbi:
#      addr:
#        - 127.0.1.10
#        - fd69:f21d:873c:fb::1
#
#  o SBI Option (Default)
#    - tcp_nodelay : true
#    - so_linger.l_onoff : false
#
#  sbi:
#    client:
#      no_tls: true
#  next_scp:
#    sbi:
#      addr: 127.0.1.10
#      option:
#        tcp_nodelay: false
#        so_linger:
#          l_onoff: true
#          l_linger: 10
#
#

#
#  <SBI Client>>
#
#  o SBI Client(http://127.0.0.10:7777)
#  sbi:
#    client:
#      no_tls: true
#  nrf:
#    sbi:
#      addr: 127.0.0.10
#      port: 7777
#
#  o SBI Client(https://127.0.0.10:443, https://[::1]:443) without verification
#  sbi:
#    client:
#      no_verify: true
#      key: /etc/open5gs/tls/amf.key
#      cert: /etc/open5gs/tls/amf.crt
#  nrf:
#    sbi:
#      - addr: 127.0.0.10
#      - addr: ::1
#
#  o SBI Client(https://nrf.open5gs.org:443)
#    Use the specified certificate while verifying the server
#
#  sbi:
#    client:
#      cacert: /etc/open5gs/tls/ca.crt
#      key: /etc/open5gs/tls/amf.key
#      cert: /etc/open5gs/tls/amf.crt
#  nrf:
#    sbi:
#      - name: nrf.open5gs.org
#
#  o SBI Client(http://[fd69:f21d:873c:fa::1]:80)
#    If prefer_ipv4 is true, http://127.0.0.10:80 is selected.
#
#    sbi:
#      addr:
#        - 127.0.0.10
#        - fd69:f21d:873c:fa::1
#
#  o SBI Option (Default)
#    - tcp_nodelay : true
#    - so_linger.l_onoff : false
#
#  sbi:
#    client:
#      no_tls: true
#  nrf:
#    sbi:
#      addr: 127.0.0.10
#      option:
#        tcp_nodelay: false
#        so_linger:
#          l_onoff: true
#          l_linger: 10
#
nrf:
    sbi:
      - addr:
          - 127.0.0.10
          - ::1
        port: 7777

#
#  o Disable use of IPv4 addresses (only IPv6)
#  parameter:
#    no_ipv4: true
#
#  o Disable use of IPv6 addresses (only IPv4)
#  parameter:
#    no_ipv6: true
#
#  o Prefer IPv4 instead of IPv6 for estabishing new GTP connections.
#  parameter:
#    prefer_ipv4: true
#
parameter:

#
#  o Maximum Number of UE
#  max:
#    ue: 1024
#
#  o Maximum Number of Peer(S1AP/NGAP, DIAMETER, GTP, PFCP or SBI)
#  max:
#    peer: 64
#
max:

#
#  o NF Instance Heartbeat (Default : 0)
#    NFs will not send heart-beat timer in NFProfile
#    NRF will send heart-beat timer in NFProfile
#    (Default values are used, so no configuration is required)
#
#  o NF Instance Heartbeat (20 seconds)
#    NFs will send heart-beat timer (20 seconds) in NFProfile
#    NRF can change heart-beat timer in NFProfile
#
#  time:
#    nf_instance:
#      heartbeat: 20
#
#  o Message Wait Duration (Default : 10,000 ms = 10 seconds)
#    (Default values are used, so no configuration is required)
#
#  o Message Wait Duration (3000 ms)
#  time:
#    message:
#        duration: 3000
time:
